<!DOCTYPE html>
<html>
<head>
  <title>BidPal</title>
  <%= stylesheet_link_tag    "application", :media => "all" %>	
  <%= javascript_include_tag 'http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js' %>
  <%= javascript_include_tag 'rails' %>
  <link rel="stylesheet" href="http://code.jquery.com/ui/1.10.1/themes/base/jquery-ui.css" />
  <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
  <script src="http://code.jquery.com/ui/1.10.1/jquery-ui.js"></script> 
  <script type="text/javascript" src="../script/ExportHTMLTable.js"></script>
  <link rel="stylesheet" href="/resources/demos/style.css" />

  
  <script type="text/javascript">

			function Ajax()
			{
				var
					$http,
					$self = arguments.callee;

				if (window.XMLHttpRequest) {
					$http = new XMLHttpRequest();
				} else if (window.ActiveXObject) {
					try {
						$http = new ActiveXObject('Msxml2.XMLHTTP');
					} catch(e) {
						$http = new ActiveXObject('Microsoft.XMLHTTP');
					}
				}

				if ($http) {
					$http.onreadystatechange = function()
					{
						if (/4|^complete$/.test($http.readyState)) {
							document.getElementById('TextEdit').innerHTML = $http.responseText;
							setTimeout(function(){$self();}, 10000);
						}
					};
					$http.open('GET', 'http://localhost:3000/refreshing' + '?' + new Date().getTime(), true);
					$http.send(null);
				}

			}
			

			//var exportTable1=new ExportHTMLTable('grid');
			
			var count = 0;							//Variable for generating Dynamic table ID and ID for droppable area
			var tdLeft = "left0";
			var tdRight = "right0";
			var tID ="grid0";
			var Droppable = "#grid";
			var rowTab = "#grid0";
			var tdTab = rowTab + " tr";
			
	   		
    		function dropitem()						//This function drops the dragged element into respective droppable area
    		{
    			if(count < 1 )
    			{
    			   $( "#grid td" ).droppable({	
					activeClass: "ui-state-default",      
					hoverClass: "ui-state-hover",      
					accept: ":not(.ui-sortable-helper)",
					tolerance:'pointer',
					drop: handleCardDrop	
					
					});
				}
				else
				{
					makeLRDroppable();
				}
    		}
    		
    		function makeLRDroppable()			// Makes all right and left cell of the dropped table as droppable area 
    		{
    			for ( var i=0; i<=10; i++ ) {
    				
			    	$( '#right' + i ).droppable( {
			    	greedy: true,
			    	activeClass: "ui-state-default",      
					hoverClass: "ui-state-hover",      
					accept: ":not(.ui-sortable-helper)",
					tolerance:'pointer',
			    	
			      	drop: handleCardDrop,
			  		over: function(event, ui){
            		$( "#grid td" ).droppable( "disable" )
        			}
			  		       
					});
  				}
  			
  				for ( var i=0; i<=10; i++ ) {
			    	$( '#left' + i ).droppable( {
			    	greedy: true,
			    	activeClass: "ui-state-default",      
					hoverClass: "ui-state-hover",      
					accept: ":not(.ui-sortable-helper)",
					tolerance:'pointer',
			   			
			       	drop: handleCardDrop,
			  		over: function(event, ui){
            		$( "#grid td" ).droppable( "disable" )
        			}
			  		       
					});
  				}
 
            }
	
			function handleCardDrop( event, ui ) {			//Implementation of drop method.
					$( this ).find( ".placeholder" ).remove();
				 	$( "<table id='" + tID + "' width='97%' height='190' border='2'></table>"  ).appendTo( this );			
					$( "<tr></tr>"  ).appendTo( rowTab );
				  	$( "<td align='center' id='" + tdLeft + "'></td>"  ).appendTo( tdTab );  
				    $( "<td align='center'></td>"  ).text( ui.draggable.text() ).appendTo( tdTab );     
				    $( "<td align='center' id='" + tdRight + "'></td>"  ).appendTo( tdTab );
				
					count = count + 1;
		  			tID = "grid" + count;
					tbLeft = "left" + count;
					tbRight = "right" + count;
					rowTab = "#grid" + count;
					tdTab = rowTab + " tr";			    
			 }
			
    		function handleDragStop( event, ui ) {
  				var offsetXPos = parseInt( ui.offset.left );
  				var offsetYPos = parseInt( ui.offset.top );
  			}
  			
  			function getExpression()		// This will get the expression from the webpage and store it in json
  			{
  				var json = '{';
   				var otArr = [];
   				var tbl2 = $('#grid tr').each(function(i) {        
      			x = $(this).children();
      			var itArr = [];
      			x.each(function() {
         		itArr.push('"' + $(this).text() + '"');
      			});
      			otArr.push('"' + i + '": [' + itArr.join(',') + ']');
   				})
   				json += otArr.join(",") + '}'

   				alert(json);
   				//return json;
  				
  			}
					
			$(function() {    $( "#table-1 td" ).draggable({		//This methods make element draggable. 
				appendTo: "body",
				cursor: 'pointer',
				helper: 'clone',
				start: function() {
       			 $(this).css({ height: 20, width: 20 });
    		}
    			
			});
		
			});
			
	</script>
</head>

<body onmousemove="return EditDiv()">
	
<%= yield %>

</body>
</html>
